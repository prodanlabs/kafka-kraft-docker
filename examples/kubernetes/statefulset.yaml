apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka
automountServiceAccountToken: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: kafka
  name: kafka-headless
  namespace: default
spec:
  clusterIP: None
  ports:
    - name: tcp-client
      port: 9092
      protocol: TCP
      targetPort: kafka-client
    - name: tcp-internal
      port: 9093
      protocol: TCP
      targetPort: kafka-internal
  selector:
    app.kubernetes.io/name: kafka
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: kafka
  name: kafka
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
  serviceName: kafka-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka
    spec:
      containers:
        - env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://${POD_NAME}.kafka-headless.default.svc.cluster.local:9092
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka-0.kafka-headless.default.svc.cluster.local:9093,1@kafka-1.kafka-headless.default.svc.cluster.local:9093,2@kafka-2.kafka-headless.default.svc.cluster.local:9093"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_DELETE_TOPIC_ENABLE
              value: "true"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_CFG_LOG_DIRS
              value: /var/lib/kafka
            - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MESSAGES
              value: "10000"
            - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MS
              value: "10"
            - name: KAFKA_CFG_LOG_RETENTION_BYTES
              value: "1073741824"
            - name: KAFKA_CFG_LOG_RETENTION_CHECK_INTERVALS_MS
              value: "300000"
            - name: KAFKA_CFG_LOG_RETENTION_MS
              value: "60000"
            - name: KAFKA_CFG_LOG_SEGMENT_BYTES
              value: "1073741824"
            - name: KAFKA_CFG_MESSAGE_MAX_BYTES
              value: "1000012"
            - name: KAFKA_CFG_NUM_CONSUMER_FETCHERS
              value: "2"
            - name: KAFKA_CFG_NUM_IO_THREADS
              value: "16"
            - name: KAFKA_CFG_NUM_NETWORK_THREADS
              value: "6"
            - name: KAFKA_CFG_NUM_PARTITIONS
              value: "4"
            - name: KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR
              value: "1"
            - name: KAFKA_CFG_OFFSETS_RETENTION_RETENTION_MS
              value: "60000"
            - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES
              value: "10240000"
            - name: KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES
              value: "1048576000"
            - name: KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES
              value: "10240000"
            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS
              value: "6000"
            - name: KAFKA_HEAP_OPTS
              value: -Xmx2048m -Xms1024m
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          image: docker.io/prodan/kafka-kraft:2.13-3.1.2-jdk17
          imagePullPolicy: IfNotPresent
          name: kafka
          ports:
            - containerPort: 9092
              name: kafka-client
              protocol: TCP
            - containerPort: 9093
              name: kafka-internal
              protocol: TCP
          startupProbe:
            tcpSocket:
              port: kafka-internal
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            tcpSocket:
              port: kafka-client
            timeoutSeconds: 30
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: 1024m
              memory: 1Gi
          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka
      serviceAccount: kafka
      volumes:
      - name: data
        emptyDir: {}